from elftools.elf.elffile import ELFFile
from elftools.elf.segments import Segment

with open('elfs//0a1c2f23efa1ccc2558e140fa35e9b0d', 'rb') as elffile:
    elffile = ELFFile(elffile)
    num_sections = elffile.num_sections()
    num_segments = elffile.num_segments()

    has_dwarf_info = elffile.has_dwarf_info()
    dwarf_info_config_machine_arch = (elffile.get_dwarf_info().config.machine_arch)
    dwarf_info_config_default_address_size = (elffile.get_dwarf_info().config.default_address_size)
    dwarf_info_config_little_endian = (elffile.get_dwarf_info().config.little_endian)
    dwarf_info_debug_info_sec = (elffile.get_dwarf_info().debug_info_sec)
    dwarf_info_debug_aranges_sec = (elffile.get_dwarf_info().debug_aranges_sec)
    dwarf_info_debug_abbrev_sec = (elffile.get_dwarf_info().debug_abbrev_sec)
    dwarf_info_debug_frame_sec = (elffile.get_dwarf_info().debug_frame_sec)
    dwarf_info_eh_frame_sec = (elffile.get_dwarf_info().eh_frame_sec)
    dwarf_info_debug_str_sec = (elffile.get_dwarf_info().debug_str_sec)
    dwarf_info_debug_loc_sec = (elffile.get_dwarf_info().debug_loc_sec)
    dwarf_info_debug_ranges_sec = (elffile.get_dwarf_info().debug_ranges_sec)
    dwarf_info_debug_line_sec = (elffile.get_dwarf_info().debug_line_sec)
    dwarf_info_debug_pubtypes_sec = (elffile.get_dwarf_info().debug_pubtypes_sec)
    dwarf_info_debug_pubnames_sec = (elffile.get_dwarf_info().debug_pubnames_sec)

    has_ehabi_info = (elffile.has_ehabi_info())
    ehabi_infos = (elffile.get_ehabi_infos())

    machine_arch = (elffile.get_machine_arch())
    shstrndx = (elffile.get_shstrndx())
    identify_file = (elffile._identify_file())

    sec_header_sh_name = (elffile._get_section_header_stringtable().header.sh_name)
    sec_header_sh_type = (elffile._get_section_header_stringtable().header.sh_type)
    sec_header_sh_flags = (elffile._get_section_header_stringtable().header.sh_flags)
    sec_header_sh_addr = (elffile._get_section_header_stringtable().header.sh_addr)
    sec_header_sh_offset = (elffile._get_section_header_stringtable().header.sh_offset)
    sec_header_sh_size = (elffile._get_section_header_stringtable().header.sh_size)
    sec_header_sh_link = (elffile._get_section_header_stringtable().header.sh_link)
    sec_header_sh_info = (elffile._get_section_header_stringtable().header.sh_info)
    sec_header_sh_addralign = (elffile._get_section_header_stringtable().header.sh_addralign)
    sec_header_sh_entsize = (elffile._get_section_header_stringtable().header.sh_entsize)

    elf_head_ident_EI_MAG = (elffile._parse_elf_header().e_ident.EI_MAG)
    elf_head_ident_EI_CLASS = (elffile._parse_elf_header().e_ident.EI_CLASS)
    elf_head_ident_EI_DATA = (elffile._parse_elf_header().e_ident.EI_DATA)
    elf_head_ident_EI_VERSION = (elffile._parse_elf_header().e_ident.EI_VERSION)
    elf_head_ident_EI_OSABI = (elffile._parse_elf_header().e_ident.EI_OSABI)
    elf_head_ident_EI_ABIVERSION = (elffile._parse_elf_header().e_ident.EI_ABIVERSION)
    elf_head_e_type = (elffile._parse_elf_header().e_type)
    elf_head_e_machine= (elffile._parse_elf_header().e_machine)
    elf_head_e_version = (elffile._parse_elf_header().e_version)
    elf_head_e_entry = (elffile._parse_elf_header().e_entry)
    elf_head_e_phoff = (elffile._parse_elf_header().e_phoff)
    elf_head_e_shoff = (elffile._parse_elf_header().e_shoff)
    elf_head_e_flags = (elffile._parse_elf_header().e_flags)
    elf_head_e_ehsize = (elffile._parse_elf_header().e_ehsize)
    elf_head_e_phentsize = (elffile._parse_elf_header().e_phentsize)
    elf_head_e_phnum = (elffile._parse_elf_header().e_phnum)
    elf_head_e_shentsize = (elffile._parse_elf_header().e_shentsize)
    elf_head_e_shnum = (elffile._parse_elf_header().e_shnum)
    elf_head_e_shstrndx = (elffile._parse_elf_header().e_shstrndx)

    # for segment in elffile.iter_segments():
        # print(segment.header)
        # print(segment.header.p_type, segment.header.p_offset, segment.header.p_vaddr, segment.header.p_paddr, segment.header.p_filesz, segment.header.p_memsz, segment.header.p_flags, segment.header.p_align)
        # print(segment.header.p_type)
        # print(segment.header.p_offset)
        # print(segment.header.p_filesz)
        # print(segment.header.p_memsz)
        # print(segment.header.p_flags)
        # print(segment.header.p_align)
        # print(segment.header.p_vaddr)
        # print(segment.header.p_paddr)
        # print()

    # for section in elffile.iter_sections():
    #     print(section.name, section.header.sh_type, section.header.sh_flags, section.header.sh_addr, section.header.sh_offset, section.header.sh_size, section.header.sh_link, section.header.sh_info, section.header.sh_addralign, section.header.sh_entsize)
        # print(section.name)
        # print(section.header)
        # print(section.header.sh_name)
        # print(section.header.sh_type)
        # print(section.header.sh_flags)
        # print(section.header.sh_addr)
        # print(section.header.sh_offset)
        # print(section.header.sh_size)
        # print(section.header.sh_link)
        # print(section.header.sh_info)
        # print(section.header.sh_addralign)
        # print(section.header.sh_entsize)
        # print()
        

# with open("rawdata.txt", "w") as text_file:
#     print(f"num_sections: {elffile.num_sections()}", file=text_file)
