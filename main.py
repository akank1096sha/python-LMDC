from elftools.elf.elffile import ELFFile
from elftools.elf.segments import Segment

with open('elfs//0a1c2f23efa1ccc2558e140fa35e9b0d', 'rb') as elffile:
    elffile = ELFFile(elffile)
    # print(elffile)
    print(elffile.num_sections())
    print(elffile.num_segments())

    print(elffile.has_dwarf_info())
    print(elffile.get_dwarf_info())
    # print(elffile.get_dwarf_info().config)
    print(elffile.get_dwarf_info().config.machine_arch)
    print(elffile.get_dwarf_info().config.default_address_size)
    print(elffile.get_dwarf_info().config.little_endian)
    print(elffile.get_dwarf_info().debug_info_sec)
    print(elffile.get_dwarf_info().debug_aranges_sec)
    print(elffile.get_dwarf_info().debug_abbrev_sec)
    print(elffile.get_dwarf_info().debug_frame_sec)
    print(elffile.get_dwarf_info().eh_frame_sec)
    print(elffile.get_dwarf_info().debug_str_sec)
    print(elffile.get_dwarf_info().debug_loc_sec)
    print(elffile.get_dwarf_info().debug_ranges_sec)
    print(elffile.get_dwarf_info().debug_line_sec)
    print(elffile.get_dwarf_info().debug_pubtypes_sec)
    print(elffile.get_dwarf_info().debug_pubnames_sec)

    print(elffile.has_ehabi_info())
    print(elffile.get_ehabi_infos())

    print(elffile.get_machine_arch())
    print(elffile.get_shstrndx())
    print(elffile._identify_file())

    print(elffile._get_section_header_stringtable())
    print(elffile._get_section_header_stringtable().header)
    print(elffile._get_section_header_stringtable().header.sh_name)
    print(elffile._get_section_header_stringtable().header.sh_type)
    print(elffile._get_section_header_stringtable().header.sh_flags)
    print(elffile._get_section_header_stringtable().header.sh_addr)
    print(elffile._get_section_header_stringtable().header.sh_offset)
    print(elffile._get_section_header_stringtable().header.sh_size)
    print(elffile._get_section_header_stringtable().header.sh_link)
    print(elffile._get_section_header_stringtable().header.sh_info)
    print(elffile._get_section_header_stringtable().header.sh_addralign)
    print(elffile._get_section_header_stringtable().header.sh_entsize)

    print(elffile._parse_elf_header())
    print(elffile._parse_elf_header().e_ident)
    print(elffile._parse_elf_header().e_ident.EI_MAG)
    print(elffile._parse_elf_header().e_ident.EI_CLASS)
    print(elffile._parse_elf_header().e_ident.EI_DATA)
    print(elffile._parse_elf_header().e_ident.EI_VERSION)
    print(elffile._parse_elf_header().e_ident.EI_OSABI)
    print(elffile._parse_elf_header().e_ident.EI_ABIVERSION)
    print(elffile._parse_elf_header().e_type)
    print(elffile._parse_elf_header().e_machine)
    print(elffile._parse_elf_header().e_version)
    print(elffile._parse_elf_header().e_entry)
    print(elffile._parse_elf_header().e_phoff)
    print(elffile._parse_elf_header().e_shoff)
    print(elffile._parse_elf_header().e_flags)
    print(elffile._parse_elf_header().e_ehsize)
    print(elffile._parse_elf_header().e_phentsize)
    print(elffile._parse_elf_header().e_phnum)
    print(elffile._parse_elf_header().e_shentsize)
    print(elffile._parse_elf_header().e_shnum)
    print(elffile._parse_elf_header().e_shstrndx)

    # for segment in elffile.iter_segments():
    #     print(segment.header)
    #     print(segment.get_interp_name())
    #     print(segment.header.p_type)
    #     print(segment.header.p_offset)
    #     print(segment.header.p_filesz)
    #     print(segment.header.p_memsz)
    #     print(segment.header.p_flags)
    #     print(segment.header.p_align)
    #     print(segment.header.p_vaddr)
    #     print(segment.header.p_paddr)
    #     print()

    # print(elffile._section_name_map)
    # print(elffile._section_name_map['.interp'])
    # print(elffile._section_name_map['.note.ABI-tag'])
    # print(elffile._section_name_map['.note.gnu.build-id'])
    # print(elffile._section_name_map['.gnu.hash'])
    # print(elffile._section_name_map['.dynsym'])
    # print(elffile._section_name_map['.dynstr'])
    # print(elffile._section_name_map['.gnu.version'])
    # print(elffile._section_name_map['.gnu.version_r'])
    # print(elffile._section_name_map['.rela.dyn'])
    # print(elffile._section_name_map['.rela.plt'])
    # print(elffile._section_name_map['.init'])
    # print(elffile._section_name_map['.plt'])
    # print(elffile._section_name_map['.plt.got'])
    # print(elffile._section_name_map['.text'])
    # print(elffile._section_name_map['.fini'])
    # print(elffile._section_name_map['.rodata'])
    # print(elffile._section_name_map['.eh_frame'])
    # print(elffile._section_name_map['.eh_frame_hdr'])
    # print(elffile._section_name_map['.init_array'])
    # print(elffile._section_name_map['.fini_array'])
    # print(elffile._section_name_map['.jcr'])
    # print(elffile._section_name_map['.dynamic'])
    # print(elffile._section_name_map['.got'])
    # print(elffile._section_name_map['.got.plt'])
    # print(elffile._section_name_map['.data'])
    # print(elffile._section_name_map['.bss'])
    # print(elffile._section_name_map['.bss'])
    # print(elffile._section_name_map['.gnu_debuglink'])
    # print(elffile._section_name_map['.shstrtab'])



    for section in elffile.iter_sections():
        # print(section)
        print(section.name)
        # print(section.header)
        # print(section.header.sh_name)
        # print(section.header.sh_type)
        # print(section.header.sh_flags)
        # print(section.header.sh_addr)
        # print(section.header.sh_offset)
        # print(section.header.sh_size)
        # print(section.header.sh_link)
        # print(section.header.sh_info)
        # print(section.header.sh_addralign)
        # print(section.header.sh_entsize)
        # print()
        
    for section in range(elffile.num_sections()) :
        print(elffile._get_section_header(section))
        print(elffile._get_section_header(section).stream_pos)

        